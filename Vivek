import java.sql.*;
import java.util.Random;

public class Toll {

    public static void main(String[] args) {
        String url = "jdbc:derby://localhost:1527/collection";
        String username = "root";
        String password = "root";

        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            Statement statement = connection.createStatement();

            DatabaseMetaData dm = connection.getMetaData();
            ResultSet rs = dm.getTables(null, null, "TOLL_DATA", null);

            // Create tables to store toll transactions and returning vehicles if not exists
            String createTableQuery = "CREATE TABLE toll_transactions (vehicle_type VARCHAR(10), toll_amount INT)";
            statement.executeUpdate(createTableQuery);
            String createReturningTableQuery = "CREATE TABLE returning_vehicles (vehicle_type VARCHAR(10), count INT)";
            statement.executeUpdate(createReturningTableQuery);

            // Insert random data for toll transactions
            Random rand = new Random();
           
            int totalVehicles = rand.nextInt(1000); // Random number of vehicles greater than 10
            int cars = 0, bikes = 0, buses = 0;
            int totalTollCollected = 0;

            for (int i = 0; i < totalVehicles; i++) {
                int randomVehicleType = (int) (Math.random() * 3); // 0: Car, 1: Bike, 2: Bus
                int tollAmount;
                String vehicleType;

                switch (randomVehicleType) {
                    case 0:
                        tollAmount = 250;
                        vehicleType = "Car";
                        cars++;
                        break;
                    case 1:
                        tollAmount = 200;
                        vehicleType = "Bike";
                        bikes++;
                        break;
                    case 2:
                        tollAmount = 500;
                        vehicleType = "Bus";
                        buses++;
                        break;
                    default:
                        tollAmount = 0;
                        vehicleType = "Unknown";
                }

                totalTollCollected += tollAmount;

                // Inserting transaction data into the database
                String insertQuery = "INSERT INTO toll_transactions (vehicle_type, toll_amount) VALUES (?, ?)";
                PreparedStatement preparedStatement = connection.prepareStatement(insertQuery);
                preparedStatement.setString(1, vehicleType);
                preparedStatement.setInt(2, tollAmount);
                preparedStatement.executeUpdate();
            }

            // Calculate toll for returning vehicles
            int totalReturningToll = totalTollCollected * 10 / 100; // Assuming 10% return toll

            // Print results
            System.out.println("Total Vehicles: " + totalVehicles);
            System.out.println("Cars: " + cars);
            System.out.println("Bikes: " + bikes);
            System.out.println("Buses: " + buses);
            System.out.println("Total Toll Collected: " + totalTollCollected + " rs");

            // Simulating returning vehicles
            System.out.println("\nSimulating returning vehicles:");

            int returningCars = cars / 2; // Assuming half of the cars are returning
            int returningBikes = bikes / 3; // Assuming one-third of the bikes are returning
            int returningBuses = buses / 4; // Assuming one-fourth of the buses are returning

            System.out.println("Returning Cars: " + returningCars);
            System.out.println("Returning Bikes: " + returningBikes);
            System.out.println("Returning Buses: " + returningBuses);

            // Insert returning vehicle data into the returning vehicles table
            String insertReturningCarsQuery = "INSERT INTO returning_vehicles (vehicle_type, count) VALUES (?, ?)";
            PreparedStatement returningCarsStatement = connection.prepareStatement(insertReturningCarsQuery);
            returningCarsStatement.setString(1, "Car");
            returningCarsStatement.setInt(2, returningCars);
            returningCarsStatement.executeUpdate();

            String insertReturningBikesQuery = "INSERT INTO returning_vehicles (vehicle_type, count) VALUES (?, ?)";
            PreparedStatement returningBikesStatement = connection.prepareStatement(insertReturningBikesQuery);
            returningBikesStatement.setString(1, "Bike");
            returningBikesStatement.setInt(2, returningBikes);
            returningBikesStatement.executeUpdate();

            String insertReturningBusesQuery = "INSERT INTO returning_vehicles (vehicle_type, count) VALUES (?, ?)";
            PreparedStatement returningBusesStatement = connection.prepareStatement(insertReturningBusesQuery);
            returningBusesStatement.setString(1, "Bus");
            returningBusesStatement.setInt(2, returningBuses);
            returningBusesStatement.executeUpdate();

            connection.close();
            System.out.println("Total Toll for Returning Vehicles: " + totalReturningToll + " rs");


        } catch (SQLException e) {
            System.out.println("Table Already exist");
        }
    }
}
